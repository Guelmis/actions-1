# name: Exploring Variables and Secrets

# on: push

# # jobs:
# #     docker:
# #         runs-on: ubuntu-latest
# #         steps:
# #         - name: Docker Build
# #           run: docker build -t docker.io/dockerUsername/imageName:latest

# #         - name: Docker Login
# #           run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

# #         - name: Docker Publish
# #           run: docker push docker.io/dockerUsername/imageName:latest

# #     deploy: 
# #       needs: docker
# #       runs-on: ubuntu-latest
# #       steps:
# #       - name: Docker Run
# #         run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest   

# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           env:
#             CONTAINER_REGISTRY: docker.io
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             IMAGE_NAME: github-actions-nginx
#           run: docker build -t $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

#         - name: Docker Login
#           env:
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#           run: docker login --username=${{  vars.DOCKER_USERNAME  }} --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             IMAGE_NAME: github-actions-nginx
#           run: docker push $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

#     deploy: 
#       needs: docker
#       runs-on: ubuntu-latest
#       steps:
#       - name: Docker Run
#         env:
#             ONTAINER_REGISTRY: docker.io
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             IMAGE_NAME: github-actions-nginx
#         run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest   


# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t docker.io/dockerUsername/imageName:latest

#         - name: Docker Login
#           run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

#         - name: Docker Publish
#           run: docker push docker.io/dockerUsername/imageName:latest

#     deploy: 
#       needs: docker
#       runs-on: ubuntu-latest
#       steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest   
# name: Exploring Variables and Secrets

# on: push
# jobs:
#     docker:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#             IMAGE_NAME: github-actions-nginx

#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

#         - name: Docker Login
#           run: docker login --username=${{  vars.DOCKER_USERNAME  }} --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           run: docker push $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

#     deploy: 
#       needs: docker
#       env: 
#             CONTAINER_REGISTRY: docker.io
#             {{  vars.DOCKER_USERNAME  }}: guelmis
#             IMAGE_NAME: github-actions-nginx
#       runs-on: ubuntu-latest
#       steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest   

name: Exploring Variables and Secrets

on: 
    workflow_dispatch:
#   schedule:
#     - cron "*/1 * * * *"
    
    #push
env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: docker build -t $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

        - name: Docker Login
          run: docker login --username=${{  vars.DOCKER_USERNAME  }} --password=$ {{ secrets.DOCKER_PASSWORD }} 

        - name: Docker Publish
          run: docker push $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest

    deploy: 
      needs: docker
      env: 
            CONTAINER_REGISTRY: docker.io
            {{  vars.DOCKER_USERNAME  }}: guelmis
            IMAGE_NAME: github-actions-nginx
      runs-on: ubuntu-latest
      steps:
      - name: Docker Run
        run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME  }}/$IMAGE_NAME:latest   